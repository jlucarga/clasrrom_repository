str(fwt)
mean(fwt)
mean(fwt,na.rm=TRUE)
quantile(fwt,na.rm=TRUE)
hist(fwt)
hist(nhanes09$Weight,freq=FALSE)
x<-rnorm(1555)
hist(x,freq=FALSE)
quantile
quantile(x)
fwt_std<-(fwt-mean(fwt,na.rm = TRUE))/sd(fwt,na.rm=TRUE)
quantile(fwt_std,na.rm=TRUE)
1+1
2+3
abs(-4)
sqrt (9)
log10(e)
log(e)
log(2)
thomson<-644
thomson
curry=500
curry
abs(curry-thomson)
celsius <- (fahrenheit-32)*(5/9)
fahrenheit <- 48
fahrenheit
print (celsius)
celseius <- (fahrenheit - 32) * (5/9)
print (celsius)
fahrenheit <- 48
print (celsius)
fahrenheit <- 48
celsiusc <- (fahrenheit -32) * (5/9)
print (celsius)
print(celsiusc)
fahrenheit <- 50
print (celsiusc)
fahrenheit <- 90
print (celsiusc)
fahrenheit <- 30
print (celsiusc)
8=1
8+1
print(celsiusc)
celcius <- (fahrenheit - 32) * (5/9)
fahrenheit <- 90
print (celsius)
fahrenheit <- 90
print(celcius)
fahrenheit <- 90
celsius <- ( fahrenheit - 32) * (5/9)
print(celsius)
print (celsius , 00)
print (celsius , 0000)
print (celsius , 0)
celsius
??from negative to positive
help.search(primes)
help.search("prime")
player <- c('Thompson', 'Curry', 'Green', 'Durant', 'Iguodala')
goals <- c(644, 675, 272, 551, 219)
salary <- c(16663575, 12112359, 15330435, 26540100, 11131368)
plot(goals, salary)
text(goals, salary, labels = player)
core (goals , salary)
cor(goals,salary)
expenses <- c(car,house,gas,water,parking,food)
car <- 200
car:
gas <- 50
house <- 900
water <- 60
parking <- 100
food <- 200
expenses <- c(car,house,water,parking,food,gas)
barplot(expenses)
gas <- 50
expenses <- c(car,house,water,parking,food,gas)
barplot(expenses)
help(bartnames)
help(bart_names)
??barplot.default
??backsolve
sort(expenses)
sort(-expenses)
sort(-1)
-1sort(expenses)
choose(n=5,k=3)
choose(n=5,k=5)
#fair coin is tossed 5 times. what is the probability of getting exactly 2 heads?
n <- 5
n <- 5
k <- 2
p <- 1/2
choose(n,k)
factorial(n,k)
facteial(n choose k)
factorial(5)
factorial(2)
factorial(3)
barplot(expenses)
knitr::opts_chunk$set(echo = TRUE)
factorial(5)/(factorial(2)*factorial(3))*.5^5
## Including Plots
#
# You can also embed plots, for example:
factorial(5)/(factorial(2)*factorial(3))* .5^5
## Including Plots
#
# You can also embed plots, for example:
choose(n,k)
choose(5,2)*.5^5
choose(5,2)*.5^5
choose(5,2)*.5^5
factorial(5)/(factorial(2)*factorial(3))* .5^5
## Including Plots
#
# You can also embed plots, for example:
choose(n,k)
choose(5,2)*.5^5
choose(5,2)*.5^5
choose(10,3)*(1/6)^10
??binomial
dbinom(3,10,(1/6))
dbinom(2,5,(1/2))
dbinom(2,5,35%)
dbinom(2,5,.35)
dbinom(2,5,.35)
dbinom(2,5,0.35)
dbinom(2,5,0.35)
dbinom(2,5,0.35)
dbinom((x>3),5,.35)
dbinom(4,5,.35)+ (5,5,.35)
dbinom(4,5,.35) + (5,5,.35)
dbinom(4,5,.35) + dbinom (5,5,.35)
intall.packages(c("stringr", "RColorBrewer","XML")
intall.packages(c("stringr", "RColorBrewer","XML")
intall.packages(c("stringr", "RColorBrewer","XML")
intall.packages(c("stringr", "RColorBrewer","XML")
install.packages(c("stringr", "RColorBrewer","XML")
(3x^2)+4x+8
x=2
x=2
(3x^2)+4x+8
x=2
((3*x)^2)+4*x+8
((3*x)^2)+4*x+8
((3*x)^2)+4*x+8
barplot(expenses)
?barplot
barplot(expenses, names.arg = c("a", "b", "c", "d", "e", "f"))
barplot(expenses, names.arg = c("a", "b", "c", "d", "e", "f"))
barplot(expenses, names.arg = c("car", "house", "food", "water", "gas", "parking"))
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
80 + 20 + 527 + 10 + 1500 + 83
80 + 20 + 527 + 10 + 1500 + 83
```
80 + 20 + 527 + 10 + 1500 + 83
#total expenses
sum(rent,transportation,groceries,gym,internet)
rent
rent <- 900
#total expenses
sum(rent,transportation,groceries,gym,internet)
#total expenses
sum(rent, transportation, groceries, gym, internet)
#total expenses
sum(rent, transportation, groceries, gym, internet)
#total expenses
sum('rent', 'transportation', 'groceries', 'gym', 'internet')
rent
rent
total_expenses
total_expenses <- 900+400+200+100+30
total_expenses <- 900+400+200+100+30
total_expenses
total_expenses
phone <- 80
rent <- 1500
transportation <- 20
groceries <- 527
gym <- 10
other <- 83
##total expenses
total_expenses <- 80 + 20 + 527 + 10 + 1500 + 83
total_expenses
semester_expenses
semester_expenses
semester_expenses <- total_expenses*semester
#semester expenses
semester <- 5
semester_expenses <- total_expenses*semester
semester_expenses
#year expenses
year <- 10
year_expenses <- total_expenses*semester
year_expenses
year_expenses <- total_expenses*year
year_expenses
abs(-4)
sqrt(9)
log(2)
# My vector expenses
gym <- 10
# My vector expenses
my_vector_expenses <- c(phone,transportation,groceries,gym,rent,other)
barplot(total_expenses)
barplot(expenses)
barplot(total_expenses)
#expenses
expenses <- phone,rent,groceries,transportation,gym,other
barplot(my_vector_expenses)
sort.default(barplot(my_vector_expenses))
sort.default(barplot.decreasing(my_vector_expenses))
barplot(my_vector_expenses)
sort(x,decreasing = my_vector_expenses)
sort(x,decreasing = FALSE)
sort(x,decreasing = barplot(my_vector_expenses))
sort()
sort(x,decreasing = my_vector_expenses)
sort(decreasing = x)
sort(decreasing = my_vector_expenses
sort(decreasing = my_vector_expenses
sort(decreasing = my_vector_expenses)
sort(barplot(my_vector_expenses))
(barplot(my_vector_expenses)
barplot(my_vector_expenses, names.arg = c("phone","rent","transportation","groceries","gym","other"))
barplot(total_expenses, names.arg = c("phone","rent","transportation","groceries","gym","other"))
barplot(expenses, names.arg = c("phone","rent","transportation","groceries","gym","other"))
barplot(total_expenses, names.arg =my_vector_expenses)) c("phone","rent","transportation","groceries","gym","other"))
(barplot(my_vector_expenses)
barplot(total_expenses, names.arg =my_vector_expenses))
# My vector expenses
my_vector_expenses<-c(phone,transportation,groceries,gym,rent,other)
# My vector expenses
expenses<-c(phone,transportation,groceries,gym,rent,other)
barplot(expenses)
barplot(expenses,names.arg=c("phone","transportation","groceries","gym","rent","other"))
a <- 3
b <- 4
hypothenus <- sqrt(a^2+b^2)
hypothenus
n <- 5
k <- 2
p <- 1/2
(factorial(5)/factorial(2))*(1/2)^5
choose(n.k)
choose(n,k)
#using choose
choose(n,k)*(1/2)^5
#fair die 10 times. what the prop of exactly getting 3 sixes?
choose(10,3)*(1/6)^10
#using stat::binomial
dbinom(2,5,(1/2))
#binomial formnula using factorial
(factorial(5)/factorial(2))*(1/2)^5
#using stat::binomial
dbinom(5,2,(1/2))
#using stat::binomial
??binomial
#using choose
choose(n,k)*(1/2)^5
dbinom(2,5,(1/2))
dbinom(2,5,.35)
dbinom(3,5,(.35^3 * .65^7))
dbinom(4,5,(.35^4 * .65^6))+dbinom(5,5,(.35^5 * .65^0))
dbinom(4,5,.35)+dbinom(5,5,.35)
install.packages(c("stringr", "RColorBrewer","XML"))
x <- 2
#calculate after downloding packages
x <- 2
3*x^2 +4*x +8
x <- -3:3
3*x^2 +4*x +8
lybrary("stringr", "RColorBrewer","XML")
lybrary("stringr)
library("stringr", "RColorBrewer","XML")
install.packages(c("stringr", "RColorBrewer","XML"))
install.packages(c("stringr", "RColorBrewer", "XML"))
library("stringr")
library("RColorBrewer")
library("XML")
#calculate after downloding packages
x <- 2
3*x^2 +4*x +8
x <- -3:3
3*x^2 +4*x +8
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
3*x^2 +4*x +8
3*x^2 +4*x +8
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
rdata <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/data/nba2017-salary-points.RData"
download.file(url = rdata, destfile = 'nba2017-salary-points.RData')
ls()
cd rdata
ls()
rm(list)=ls(())
rm(list)=ls(())
load('nba2017-salary-points.RData')
load('nba2017-salary-points.RData')
ls()
load('nba2017-salary-points.RData')
ls()
len()
load('nba2017-salary-points.RData')
ls()
lenght()
load('nba2017-salary-points.RData')
ls()
length()
summary()
load('nba2017-salary-points.RData')
ls('nba2017-salary-points.RData')
load('nba2017-salary-points.RData')
ls()
length('nba2017-salary-points.RData')
head('nba2017-salary-points.RData')
tail('nba2017-salary-points.RData')
summary('nba2017-salary-points.RData')
load('nba2017-salary-points.RData')
ls()
length()
load('nba2017-salary-points.RData')
ls()
length('nba2017-salary-points.RData')
head()
load('nba2017-salary-points.RData')
ls()
length('nba2017-salary-points.RData')
head('nba2017-salary-points.RData')
tail()
load('nba2017-salary-points.RData')
ls()
length('nba2017-salary-points.RData')
head('nba2017-salary-points.RData')
tail('nba2017-salary-points.RData')
summary()
load('nba2017-salary-points.RData')
ls()
length('nba2017-salary-points.RData')
head('nba2017-salary-points.RData')
tail('nba2017-salary-points.RData')
summary('nba2017-salary-points.RData')
length(player)
ls()
length(points)
ls()
length("player","points","points1","points2", "points3","position","rdata","salary","team")
summary()
load('nba2017-salary-points.RData')
ls()
length(player)
length(player,points,points1,points2,points3,position,rdata,salary,team)
length(c(player,points,points1,points2,points3,position,rdata,salary,team))
length(player) == length(points)
length(player) == length(points) == length(points1)
length(player) == length(points) == length(points1)
barplot.default()
length(salary)
is.na(salary)
TRUE %in% is.na(salary)
#Do all the objects have the same length?
#Yes.
is.na(salary)
TRUE %in% is.na(salary)
class(team)
is.vector(playeer)
is.vector(player)
#The class of the objects is Factor.
#How do you know if any of the loaded objects is a vector
#by using  is.vector() IE:
#is.vector(player)
is.vector(player)
typeof(player)
#by using typeof() Ex:
#typeof(player)
typeof(player)
#Create a vector four by selecting the first four elements in player:
#four <- head(player, n = 4)
four <- head(player, n = 4)
#Create a vector four by selecting the first four elements in player:
#four <- head(player, n = 4)
four <- head(player, n = 4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
Theon_Greyjoy_quote=("I'm a Greyjoy. We've been Lords of the Iron Islands for hundreds of years. There's not a family in Westeros that can look down on us. Not even the Lannisters")
Theon_Greyjoy_quote
Theon_Greyjoy_image=https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606
Theon_Greyjoy_image=(https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606)
Theon_Greyjoy_image= ![](https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606)
![Theon_Greyjoy_image](https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606)
Theon_Greyjoy_image=![https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606)]
Theon_Greyjoy_image=https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606)
[Theon_Greyjoy_image](https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606)
![https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606]
![](https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606)
(https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606)
https://vignette.wikia.nocookie.net/gameofthrones/images/5/5f/TheonGreyjoy7x7.jpg/revision/latest?cb=20170823221606
Theon_Greyjoy_quote=("I'm a Greyjoy. We've been Lords of the Iron Islands for hundreds of years. There's not a family in Westeros that can look down on us. Not even the Lannisters")
Theon_Greyjoy_quote
getwd()
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
View(abalone)
download.file(origin, destination)
str(abalone, vec.len = 1)
View(abalone)
View(abalone)
column_names <- c(
'sex',
'length',
'diameter',
'height',
'whole_weight',
'shucked_weight',
'viscera_weight',
'shell_weight',
'rings')
column_types <- c(
'character',
'real',
'real',
'real',
'real',
'real',
'real',
'real',
'integer'
)
abalone <- read.table(
'abalone.data',
col.names = column_names,
colClasses = column_types,
sep = ","
)
abalone <- read.table(
'abalone.data',
col.names = column_names,
colClasses = column_types,
sep = ",")
origin <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data'
destination <- 'abalone.data'
download.file(origin, destination)
abalone <- read.table(
'abalone.data',
col.names = column_names,
colClasses = column_types,
sep = ",")
str(abalone, vec.len = 1)
read.csv()
read.csv('col_names', 'col_types')
read.csv(col_names, col_types)
read.csv ()
read.csv (col.names = column_names, col_types=column_types)
read.csv ('abalone.data',col.names = column_names, col_types=column_types)
read.csv ('column_names','column_types')
install.packages("readr")
library(readr)
?read_csv
abalone1 <- read_csv('abalone.data', col_names = column_names)
abalone1 <- read_csv('abalone.data', col_names = column_names, col_types = list(sex = col_character(),
length = col_double(),
diameter = col_double(),
height = col_double(),
whole_weight = col_double(),
shucked_weight = col_double(),
viscera_weight = col_double(),
shell_weight = col_double(),
rings = col_integer()))
install.packages("stringr")
install.packages("plotly")
library(plotly)
library(plotly)
library(dplyr)
library(stringr)
library(plotly)
install.packages("stringr")install.packages("plotly")
install.packages("stringr")
install.packages("plotly")
library(dplyr)
library(stringr)
library(plotly)
download.file(github <- "https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/"
datafile <- "data/mobile-food-sf.csv"
download.file(paste0(github, datafile), destfile = "mobile-food-sf.csv"))
download.file(github <- "https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/"
datafile <- "data/mobile-food-sf.csv"
download.file(github <- "https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/"
datafile <- "data/mobile-food-sf.csv"
github <- "https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/"
datafile <- "data/mobile-food-sf.csv"
download.file(paste0(github, datafile), destfile = "mobile-food-sf.csv")
setwd("~/Documents/stat 133/lab/10lab10")
library(dplyr)
library(stringr)
library(plotly)
github <- "https://raw.githubusercontent.com/ucb-stat133/stat133-spring-2018/master/"
datafile <- "data/mobile-food-sf.csv"
download.file(paste0(github, datafile), destfile = "mobile-food-sf.csv")
dat <- read.csv('mobile-food-sf.csv', stringsAsFactors = FALSE)
dat
