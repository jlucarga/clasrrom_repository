ggplot(data= gsw) + geom_text(aes(x=weight, y=height))
ggplot(data= gsw) + geom_point(aes(x=weight, y=height))
GSW<- filter(dat, team== "GSW")
ggplot(data= GSW) + geom_point(aes(x=weight, y=height))
GSW
ggplot(data= GSW) + geom_point(aes(x=weight, y=height)) + geom_text(label_both(player))
GSW
ggplot(data= GSW) + geom_point(aes(x=weight, y=height)) + geom_text(label_both(player))
ggplot(data= GSW) + geom_point(aes(x=weight, y=height))
GSW
ggplot(data= GSW) + geom_point(aes(x=weight, y=height, label= rownames(player))) +geom_text()
ggplot(data= GSW) + geom_point(aes(x=weight, y=height, label= rownames(player))) +geom_text(player)
ggplot(GSW, aes(x=weight, y=height, label= rownames(player))) +geom_text()
ggplot(GSW, aes(weight, height, label= rownames(GSW))) +geom_text()
player
GSW
ggplot(GSW, aes(weight, height, label= rownames(player))) +geom_text()
ggplot(GSW, aes(weight, height, label= rownames(GSW$player))) +geom_text()
ggplot(GSW, aes(weight, height, label= player)) +geom_text()
ggplot(GSW, aes(weight, height, label= player)) +geom_text( check_overlap = TRUE)
ggplot(GSW, aes(weight, height, label= player)) +geom_text( check_overlap = TRUE)
ggplot(GSW, aes(weight, height, label= player)) +geom_label( check_overlap = TRUE)
ggplot(dat, aes(x=salary))+geom_density()
ggplot(dat, aes(x=points2))+geom_histogran()
ggplot(dat, aes(x=points2))+ geom_histogram(binwidth = 50)
ggplot(dat, aes(x=position) + geom_bar()
ggplot(dat, aes(x=position) + geom_bar()
ggplot(dat, aes(x=position) + geom_bar()
ggplot(dat, aes(x=position) + geom_bar()
ggplot(dat, aes(x=position)) + geom_bar()
ggplot(dat, aes(x=position)) + geom_bar(stat_ydensity())
ggplot(dat, aes(x=position)) + geom_bar(stat_ydensity(position))
ggplot(dat, aes(x=position)) + geom_bar(stat=density)
ggplot(dat, aes(x=position)) + geom_bar(stat= 'density')
summarise(group_by(dat, team), three_points = median(points3))
group_by(dat, team)
group_by(dat, team=="C")
group_by(dat, position=="C")
summarise(group_by(dat, team), three_points = median(points3))
ggplot(dat, aes(experience, salary, position=="c"))
ggplot(dat, aes(experience, salary))
ggplot(data$position, aes(experience, salary))
ggplot(dat$position, aes(experience, salary))
ggplot(filter(dat, position=="c"), aes(experience, salary))
ggplot((filter(dat, position=="c")), aes(experience, salary))
(filter(dat, position=="c")
filter(dat, position=="c")
dat
ggplot((filter(dat, position=="C")), aes(experience, salary))
ggplot((filter(dat, position=="C")), aes(experience, salary, position))
GSW
ggplot((filter(dat, position=="C"))+geom_points(aes(experience, salary, position))
ggplot((filter(dat, position=="C"))+geom_point(aes(experience, salary, position))
ggplot(filter(dat, position == 'C'),aes(x = experience, y = salary)) + geom_point() +geom_smooth(method = lm)
ggplot(filter(dat, position == 'C'),aes(x = experience, y = salary)) + geom_point() +geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point(alpha = 0.7) +
facet_wrap(~ position)
ggplot(data = dat, aes(x = experience, y = salary)) +geom_point(alpha = 0.7) +facet_wrap(~ team)
ggplot(data = dat, aes(x = experience, y = salary)) +geom_point(alpha = 0.7) +facet_wrap(~ position)
ggplot(data = dat, aes(x = age)) +geom_density(fill ='gray') +facet_wrap(~ team)
ggplot(dat, aes(x = height, y = weight)) +geom_point(alpha = 0.7) +facet_wrap(~ position)
ggplot(dat, aes(x = age)) +geom_density(fill ='gray') +facet_wrap(~ team)
ggplot(dat, aes(x = experience, y = salary)) +geom_point(alpha = 0.7) +facet_wrap(~ team)
ggplot(dat, aes(x = experience, y = salary)) +geom_point(alpha = 0.7) +facet_wrap(~ position)
ggplot(dat, aes(x = height, y = weight)) +geom_point(alpha = 0.7) +geom_density2d() +facet_wrap(~ position)
ggplot(filter(dat, team == 'GSW'),aes(x = experience, y = salary)) + geom_point() +theme_bw()
gpplot(data = filter(dat, team == 'GSW'),aes(x = experience, y = salary)) + geom_point() +theme_classic()
gpplot(filter(dat, team == 'GSW'),aes(x = experience, y = salary)) + geom_point() +theme_classic()
ggplot(filter(dat, team == 'GSW'),aes(x = experience, y = salary)) + geom_point() +theme_classic()
ggplot(filter(dat, team == 'GSW'),aes(x = experience, y = salary)) + geom_point() +theme_dark()
ggplot(dat, aes(x = height, y = weight)) +geom_point(alpha = 0.3) +geom_density2d() +facet_wrap(~ position)
ggplot(dat, aes(x = height, y = weight)) +geom_point(alpha = 0.5) +facet_wrap(~ position)
ggplot(dat, aes(x = experience, y = salary)) +geom_point(alpha = 0.9) +facet_wrap(~ position)
x<- 1:3
x+1
x*2
x*c(1,2)
x*c(1,2,3)
x + c(1,2)
x + c(1)
x + c(1,2)
x + c(1,2,3)
x + 1,2
x + 1,2,3
y = 20
y
y>5
y<5
x
sqrt(x)
(x)^2
z<-x^2
z
class(z)
class(x)
typeof(x)
typeof(z)
z<-c(x^2)
z
x
typeof(x)
typeog(z)
typeof(z)
??square
x[1]
x[0]
x
x[:3]
x[ :3]
head(x, n=2)
x[1:3]
x<-c(1,3,2,5,4,6,9)
x[1:3]
rep(x, 2)
rep(x, times=1)
rep(x, times=2)
rep(x, times=2, each=1)
rep(x, times=2, each=2)
rep(x, times=1, each=2)
matrix(4,3)
matrix(nrow=4,ncol=3)
matrix(1:2, nrow=4,ncol=3)
matrix(1:12, nrow=4,ncol=3)
matrix(1:12, nrow=4,ncol=3, byrow = False)
matrix(1:12, nrow=4,ncol=3, byrow = FALSE)
matrix(1:12, nrow=4,ncol=3, byrow = TRUE)
matrix(12, nrow=4,ncol=3, byrow = TRUE)
matrix(1:, nrow=4,ncol=3, byrow = TRUE)
matrix(1:8, nrow=4,ncol=3, byrow = TRUE)
matrix(1:12, nrow=4,ncol=3, byrow = TRUE)
?:
??:
help(:)
help(colon)
?colon
f<-2
2f<-2x
f2<-2x
f2<-2f
f2<-2*f
2f<-2*f
2f<-2*2
f<-2*2
1==TRUE
2==TRUE
10==TRUE
0==TRUE
FALSE==TRUE
seq(from=1.0, to=2.0, by=0.1)
seq(from=1, to=2, by=0.1)
rep(10.0,4)
as$fg$gh<- 4
nbaData
nbaData
Inputs(s):
=====================================================================
=====================================================================
library(readr)
library(dplyr)
library(ggplot2)
library(ggplot2)
library(readr)
library(dplyr)
setwd("~/Documents/stat133/lab/lab06/code")
dat <- read_csv('../data/nba2017-players.csv')
dat <- read_csv(' ../data/nba2017-players.csv')
dat <- read_csv(../'data/nba2017-players.csv')
dat <- read_csv(../data/nba2017-players.csv)
dat <- read_csv('../data/nba2017-players.csv')
dat <- read_csv('../data/nba2017-players.csv')
dat <- read_csv('../data/nba2017-players.csv/')
dat <- read_csv('../data/nba2017-players.csv')
read_csv('../data/nba2017-players.csv')
data<- read_csv('../data/nba2017-players.csv')
data<- read_csv('../data/nba2018-players.csv')
data
arrange(filter(data, team==warrios), salary)
arrange(filter(data, team==WSW), salary)
arrange(filter(data, team== 'WSW'), salary)
arrange(filter(data, team== 'WSW'), salary)
warriors<-arrange(filter(data, team== 'WSW'), salary)
write.csv(warriors, file = '../data/warriors.csv', row.names = FALSE)
write.csv(warriors, file = '../data/warriors.csv', row.names = FALSE)
arrange(filter(data, team== 'LAL'), desc(experience))
write.csv(lakers, file = '../data/lakers.csv')
lakers<-arrange(filter(data, team== 'LAL'), desc(experience))
write.csv(lakers, file = '../data/lakers.csv')
sink(file = '../output/data-structure.txt')
summary(dat)
sink()
sink(file = '../otuput/summary-warriors.txt')
summary(warriors)
sink()
sink(file = '../otuput/summary-lakers.txt')
summary(lakers)
sink()
sink(file = '../otuput/summary-warriors.txt')
sink(file = '../otuput/summary-warriors.txt')
sink(file = '../output/data-structure.txt')
summary(data)
sink()
sink(file = '../otuput/summary-warriors.txt')
sink(file = '../otuput/summary-warriors.txt')
warriors<-arrange(filter(data, team== 'WSW'), salary)
write.csv(warriors, file = '../data/warriors.csv', row.names = FALSE)
lakers<-arrange(filter(data, team== 'LAL'), desc(experience))
#This time I didn't use row_names=FALSE to avoid including first column of numbers
write.csv(lakers, file = '../data/lakers.csv')
sink(file = '../otuput/summary-warriors.txt')
sink(file = '../otuput/summary-warriors.txt')
summary(warriors)
sink()
sink(file = '../otuput/summary-warriors.txt')
summary(warriors)
sink(file = '../otuput/summary-warriors.txt')
sink(file = '../output/summary-warriors.txt')
summary(warriors)
sink()
sink(file = '../output/summary-lakers.txt')
summary(lakers)
sink()
sink(file = '../output/summary-height-weight.txt')
summary(dat[ ,c('height', 'weight')])
summary(dat[ ,c('height', 'weight')])
summary(data[ ,c('height', 'weight')])
sink()
png(filename = "../images/scatterplot-height-weight.png")
plot(dat$height, dat$weight, pch = 20,
xlab = 'Height', ylab = 'Height')
plot(data$height, data$weight, pch = 20,
xlab = 'Height', ylab = 'Height')
dev.off()
help(png)
#Open the help documentation of png() and related graphic devices.
help(png)
plot(data$height, data$weight, pch = 20,
xlab = 'Height', ylab = 'Height')
#Open the help documentation of png() and related graphic devices.
help(png)
plot(data$hxeight, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(dat$height, dat$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(dat$height, dat$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, pch = 20,
xlab = 'Height', ylab = 'Height')
plot(data$height, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, pch = 20,
xlab = 'Height', ylab = 'Height')
plot(data$height, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, pch = 20,
xlab = 'Height', ylab = 'Height')
#Open the help documentation of png() and related graphic devices.
help(png)
plot(data$height, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 22,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 30,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 25,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 12,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 2,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 1,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 11,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 16,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 16,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 16,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, pch = 20,
xlab = 'Height', ylab = 'Height')
plot(data$height, data$weight, las = 3, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 7, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 5, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 4, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 3, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 0, pch = 19,
xlab = 'Height', ylab = 'Weight')
plot(data$height, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
#Open the help documentation of png() and related graphic devices.
help(png)
dev.off()
png(filename = '../images/scatterplot2-height-weight.png', pointsize = 20)
plot(data$height, data$weight, las = 1, pch = 19,
xlab = 'Height', ylab = 'Weight')
dev.off()
jpeg(filename = '../images/histogram-age.jpeg', width = 600, height = 400)
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
dev.off()
dev.off()
pdf(filename = '../images/histogram-age.jpeg', width = 7, height = 5)
hist(dat$age, xlab = 'Age', las = 1, col = 'gray80')
pdf(filename = '../images/histogram-age.jpeg', width = 7, height = 5)
pdf(filename = '../images/histogram-age.jpeg', width = 7, height = 5)
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
pdf(filename = '../images/histogram-age.jpeg', width = 7, height = 5)
dev.off()
hist(data$age, xlab = 'Age', las = 0, col = 'gray80')
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
hist(data$age, xlab = 'Age', las = 0, col = 'gray80')
hist(data$age, xlab = 'Age', las = 2, col = 'gray80')
hist(data$age, xlab = 'Age', la = 2, col = 'gray80')
hist(data$age, xlab = 'Age', las = 2, col = 'gray80')
?hist
?hist
hist(data$age, xlab = 'Age', frequ = 2, col = 'gray80')
pdf(filename = '../images/histogram-age.jpeg', width = 7, height = 5)
?pdf
#Open the help documentation of png() and related graphic devices.
help(png)
pdf(filename = '../images/histogram-age.jpeg', width = 7, height = 5)
?pdf
pdf(filename = '../images/histogram-age.pdf', width = 7, height = 5)
pdf(filename = '../images/histogram-age.pdf', width = 7, height = 5)
jpeg(filename = '../images/histogram-age.jpeg', width = 600, height = 400, units(px))
jpeg(filename = '../images/histogram-age.jpeg', width = 600, height = 400, units=px))
jpeg(filename = '../images/histogram-age.jpeg', width = 600, height = 400, units=px)
jpeg(filename = '../images/histogram-age.jpeg', width = 600, height = 400, units="px")
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
dev.off()
pdf(filename = '../images/histogram-age.pdf', width = 7, height = 5, units="inches")
pdf(filename = '../images/histogram-age.pdf', width = 7, height = 5, units="inch")
pdf(filename = '../images/histogram-age.pdf', width = 7, height = 5, units="in")
pdf(filename = '../images/histogram-agee.pdf', width = 7, height = 5, units="in")
pdf(filename = '../images/histogram-age.pdf', width = 7, height = 5, units="in")
hist(data$age, xlab = 'Age', frequ = 2, col = 'gray80')
dev.off()
pdf(filename = '../images/histogram-age.pdf', width = 7, height = 5, units="in")
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
dev.off()
pdf(filename = '../images/histogram-age.pdf', width = 7, height = '5', units="in")
pdf(filename = '../images/histogram-age.pdf', width = 7, height = '5')
pdf(filename = '../images/histogram-age.pdf', width = '7', height = '5')
pdf(file = '../images/histogram-age.pdf', width = 7, height = '5')
pdf(file = '../images/histogram-age.pdf', width = 7, height = 5)
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
pdf(file = '../images/histogram-age.pdf', width = 7, height = 5)
pdf(file = '../images/histogram-age.pdf', width = 7, height = 5, units ='in')
pdf(file = '../images/histogram-age.pdf', width = 7, height = 5) units="in")
pdf(file = '../images/histogram-age.pdf', width = 7, height = 5, units="in")
pdf(file = '../images/histogram-age.pdf', width = 7, height = 5)
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
dev.off()
hist(dat$age, xlab = 'Age', las = 1, col = 'gray80', units = "in")
hist(data$age, xlab = 'Age', las = 1, col = 'gray80', units = "in")
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
jpeg(filename = '../images/histogram-age.jpeg', width = 600, height = 400, units="px")
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
dev.off()
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
pdf(file = '../images/histogram-age.pdf', width = 7, height = 5)
gg_pts_salary <- ggplot(data = dat, aes(x = points, y = salary)) +
geom_point()
gg_pts_salary
gg_pts_salary
gg_pts_salary <- ggplot(data = dat, aes(x = points, y = salary)) +
geom_point()
gg_pts_salary <- ggplot(data = data, aes(x = points, y = salary)) +
geom_point()
gg_pts_salary
ggsave('../images/points_salary.pdf',
plot = gg_pts_salary,
width = 7, height = 5, units = "in")
ggsave('../images/points_salary.pdf',
gg_pts_salary)
ggsave('../images/points_salary.pdf',
plot = gg_pts_salary,
width = 7, height = 5, units = "in")
data
gg_pts_salary
hist(data$age, xlab = 'Age', las = 1, col = 'gray80')
gg_ht_wt_positions <- ggplot(data = data, aes(x = height, y = weight)) +
geom_point(alpha = 0.7) +
facet_wrap(~ position)
ggsave('../images/height_weight_by_position.pdf',
plot = gg_ht_wt_positions,
width = 6, height = 4, units = "in")
# Your Turn
data$player
# Your Turn
filter(data$player, team =="LAL")
data
# Your Turn
filter(data$player, data$team == "LAL")
# Your Turn
filter(data, team == "LAL")
# Your Turn
filter(player, team == "LAL")
# Your Turn
filter(data$player, team == "LAL")
# Your Turn
filter(team == "LAL")
# Your Turn
filter(data,team == "LAL")
# Your Turn
filter(data,team == "LAL") %>%
select(player)
filter(data, team =="GSW" & position== "PG")%>%
select(player, salary)
filter(data, experience>10 & salary>= 10000000)
filter(data, experience>10 & salary>= 10000000)%>%
select(player, age, team)
filter(data, experience>10 & salary>= 10000000)%>%
select(player, age, team, salary)
filter(data, experience>10 & salary<= 10000000)%>%
select(player, age, team, salary)
filter(data, experience>10 & salary<= 10000000)%>%
select(player, age, team, salary)
gsw_mpg<- filter(data, player=="GSW")%>%
select(player, experience, min_per_game)%>%
arrange(desc(min_per_game))
head(data)
head(data, 1)
#select the name, team, height, and weight, of rookie players, 20 years old, displaying only the first five occurrences (i.e. rows).
min_per_game<- data$minutes/data$games
#select the name, team, height, and weight, of rookie players, 20 years old, displaying only the first five occurrences (i.e. rows).
data$min_per_game<- data$minutes/data$games
gsw_mpg<- filter(data, player=="GSW")%>%
select(player, experience, min_per_game)%>%
arrange(desc(min_per_game))
gsw_mpg
#display the player names of Lakers 'LAL'
data%>%
filter(team == "LAL") %>%
select(player)
#display the name and salary of GSW point guards ‘PG’.
data%>%
filter(team =="GSW" & position== "PG")%>%
select(player, salary)
#dislay the name, age, and team, of players with more than 10 years of experience, making 10 million dollars or less.
data%>%
filter(experience>10 & salary<= 10000000)%>%
select(player, age, team, salary)
#select the name, team, height, and weight, of rookie players, 20 years old, displaying only the first five occurrences (i.e. rows).
data$min_per_game<- data$minutes/data$games
gsw_mpg<- data%>%
filter(player=="GSW")%>%
select(player, experience, min_per_game)%>%
arrange(desc(min_per_game))
gsw_mpg
gsw_mpg<- data%>%
filter(team=="GSW")%>%
select(player, experience, min_per_game)%>%
arrange(desc(min_per_game))
gsw_mpg
gsw_mpg<-
filter(data,team=="GSW")%>%
select(player, experience, min_per_game)%>%
arrange(desc(min_per_game))
gsw_mpg
data
head(data)
head(data).show()x
show(data)
show(head(data))
data[1, ]
slice(1:5)
#display the average triple points by team, in ascending order, of the bottom-5 teams (worst 3pointer teams).
data%>%
group_by(team)%>%
select(team, points3)%>%
summarise(avg_points3= mean(points3))%>%
slice(1:5)
#display the average triple points by team, in ascending order, of the bottom-5 teams (worst 3pointer teams).
data%>%
group_by(team)%>%
select(team, points3)%>%
summarise(avg_points3= mean(points3))%>%
arrange(avg_points3)%>%
slice(1:5)
data %>%
filter(position=="PF" & experience== 5,10) %>%
select(age, position) %>%
summarise(mean_age= mean(age) & sd_age= sd(age))
data %>%
filter(position=="PF" & experience %in% 5:10) %>%
summarise(mean_age= mean(age) & sd_age= sd(age))
data %>%
filter(position=="PF" & experience %in% 5:10) %>%
summarise(mean_age= mean(age), sd_age= sd(age))
source('~/Documents/stat133/lab/lab06/code/lab06.script.R')
load("/Users/joselucar/Documents/GitHub/clasrrom_repository/stat133/lab/warmups/warmup_02/tents.RData")
